var documenterSearchIndex = {"docs":
[{"location":"#TensorBoardLogger.jl-1","page":"Home","title":"TensorBoardLogger.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Log data to TensorBoard from Julia","category":"page"},{"location":"#","page":"Home","title":"Home","text":"TensorBoard is an interactive dashboard that can be used to visualize data generated from your programs.  TensorBoardLogger is a Julia package that allows you to log data to TensorBoard through the standard Julia Logging system.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"To install this Julia package run the following command in the julia REPL:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add TensorBoardLogger","category":"page"},{"location":"#","page":"Home","title":"Home","text":"note: Note\nTensorBoardLogger only contains code to serialize data to TensorBoard.  To run the TensorBoard interface, you should install it and run it.  The easiest way to install it is to install TensorFlow.  Instructions for running TensorBoard can be found on the GitHub page.","category":"page"},{"location":"#Basic-Usage-1","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"CurrentModule = TensorBoardLogger","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The fundamental type defined in this package is a TBLogger, which behaves like other standard loggers in Julia such as ConsoleLogger or TextLogger. You can  create one by passing it the path to the folder where you want to store the data. You can also pass an optional second argument to specify the behaviour in case  there already exhist something at the given path.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Once you have created a TBLogger, you can use it as you would use any other  logger in Julia:      - You can set it to be your global logger with the function with_logger     - You can set it to be the current logger in a scope with the function with_logger() do.... end     - You can combine it with other Loggers using LoggingExtras.jl, so that messages are logged to TensorBoard and to other backends at the same time.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using TensorBoardLogger, Logging, Random\n\nlg=TBLogger(\"tensorboard_logs/run\", min_level=Logging.Info)\n\nstruct sample_struct first_field; other_field; end\n\nwith_logger(lg) do\n    for i=1:100\n        x0          = 0.5+i/30; s0 = 0.5/(i/20);\n        edges       = collect(-5:0.1:5)\n        centers     = collect(edges[1:end-1] .+0.05)\n        histvals    = [exp(-((c-x0)/s0)^2) for c=centers]\n        data_tuple  = (edges, histvals)\n        data_struct = sample_struct(i^2, i^1.5-0.3*i) \n\n\n        @info \"test\" i=i j=i^2 dd=rand(10).+0.1*i hh=data_tuple\n        @info \"test_2\" i=i j=2^i hh=data_tuple log_step_increment=0\n        @info \"\" my_weird_struct=data_struct   log_step_increment=0\n        @debug \"debug_msg\" this_wont_show_up=i\n    end\nend","category":"page"},{"location":"basics/#Introduction-1","page":"Basics","title":"Introduction","text":"","category":"section"}]
}
